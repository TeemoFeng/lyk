<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/1/18
 * Time: 15:41
 */

namespace app\wycadmin\controller;


use app\common\controller\admin\AdminBase;
use app\common\lib\IAuth;
use think\Exception;

class Admin extends AdminBase
{
    protected $PowerModelName = '';
    protected $AdminUserModelName = '';
    
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->PowerModelName = config('ModelName.Power');
        $this->AdminUserModelName = config ('ModelName.AdminUser');
    }

    /**
     * @return mixed
     * 新增管理员
     */
    public function adminAdd(){
        if (request ()->isGet ()){
            $powerList = model($this->PowerModelName)
                ->field('title,id')
                ->where('status','eq',$this->normal)
                ->select();
            $this->assign (['powerList'=>$powerList]);
            return $this->fetch ();
        }else if(request ()->isPost ()){
            $data = input('post.');
            $this->validateCheck($this->AdminUserModelName,$data);
            $data['status'] = $this->normal;
            $data['password'] = IAuth::setPassword ($data['password']);
            $newData = $this->fieldFilter('username,password,status,power',$data);
            $AdminUser = model($this->AdminUserModelName);
            $this->publicAddOrEdit($this->editKey,$AdminUser,$newData,'管理员添加','admin/adminlist','username',true);
        }
    }

    public function adminList(){
        $adminListPage = model ($this->AdminUserModelName)
            ->where ('status','neq',$this->delete)
            ->paginate ($this->listRows,false,$this->page)
            ->each (function ($item,$key){
                if($item->power != 0){
                    $item->role = model ('Power')->where('id',$item->power)->value ('title');
                }else{
                    $item->role = '超级管理员';
                }
                $item->last_login_time = date ('Y-m-d H:i:s',$item->last_login_time);
            });
//        $powerList = model($this->PowerModelName)
//            ->field('title,id')
//            ->where('status','eq',$this->normal)
//            ->select();
        $this->assign (['adminList'=>$adminListPage]);
        return $this->fetch();
    }

    public function adminEdit($id=0){
        if (request()->isGet()){
            $adminInfo = model ('AdminUser')->get(['id'=>$id]);
            $this->assign(['adminInfo'=>$adminInfo]);
            $powerList = model($this->PowerModelName)
                ->field('title,id')
                ->where('status','eq',$this->normal)
                ->select();
            $this->assign (['powerList'=>$powerList]);
            return $this->fetch();
        }elseif (request()->isPost()){
            $data = input('post.');
            if(empty($data['password']) && empty($data['password_confirm'])){
                $data['password'] = 'AXWEDFQ@@3';
                $data['password_confirm'] = 'AXWEDFQ@@3';
            }
            $this->validateCheck('AdminUser',$data);
            if ($data['password'] == 'AXWEDFQ@@3'){
                unset($data['password']);
            }else{
                $data['password'] = IAuth::setPassword ($data['password']);
            }
            $data['status'] = $this->normal;
            $NewsType = model('AdminUser');
            $this->publicAddOrEdit($this->editKey,$NewsType,$data,'管理员编辑','admin/adminlist','username');
        }
    }

    /**
     * 删除管理员
     */
    public function adminDelete(){
        $this->publicModify($this->AdminUserModelName,$this->delete,'admin/adminlist','username');
    }
    /**
     * 禁用管理员
     */
    public function adminPadding(){
        $this->publicModify($this->AdminUserModelName,$this->padding,'admin/adminlist','username');
    }

    /**
     * 启用管理员
     */

    public function adminEnable(){
        $this->publicModify($this->AdminUserModelName,$this->normal,'admin/adminlist','username');
    }
}